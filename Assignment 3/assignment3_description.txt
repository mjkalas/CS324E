For Assignment 3, we created a Python file that parses through a plain text book and extracts all the words, all the unique words, and the frequency of words as they appear in the novel The Three Musketeers.

With the data from the three files, we created a Wordle with the allwords.txt, a novel visualization word cloud with the uniquewords.txt, and a scatter-plot graph to illustrate the word frequency.

The assignment was a collaboration.  The Python program was mostly written by Minal while the word frequency was done by Bruno.  The Wordle was completed by Minal, and the word frequency was completed by Bruno.  The novel visualization was a collaborative effort.

-- Novel Visualization --

These are the colours that came to mind when thinking about The Three Musketeers.  The lengths were chosen to be factors for colour selection because most words would be less than 8 characters, so making those words black would create a neutral canvas.  Since a number of words would be between 8 and 12 characters, those would be 'pops' of gold on the word 'canvas'.  Since the least words would be longer than 12 characters, we chose do those in red because that is a bolder colour, so it was used in moderation.  The font was chosen because it was readable, and with the colours drawing the eye across the word cloud, the font did not need to be showy.

-- Word Frequency Visualization --

For the word frequency visualization, we decided to plot the number of words that appeared in the novel with respect to the number of times they appeared. Because only a small minority of the words appeared many times, plotting this data directly was uninteresting; In fact, it would plot a straight line. In order to visualize the data better, we decided to use logarithmic axes to display small nuances in the data. This showed the distribution of the words in a more visually appealing manner, and allows for a person to see the difference in the orders of magnitude between frequencies of different words. In addition, we used mathematical scaling to ensure that the plot would always be centered inside the window pane, regardless of which word frequency file is input to the program.

-- Justification for Extra Credit --

Because we decided to visualize the graphs using unique axes and implement math functions to ensure the image would always be displayed and scaled correctly, regardless of word frequencies given, we believe that we DESERVE an extra credit point. Also, one of our team members dropped the class and we were forced to worked on this with a weaker team structure, which merits some compensation.
