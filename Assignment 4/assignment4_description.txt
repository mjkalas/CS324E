In this program, we decided to draw a space-themed 3D scene. The 3D scene consists of various planets orbiting around in the scene, with a couple of Tardis machines flying in zero gravity as well. We added an image  background with stars to make the visualization more realistic.

MK did the Tardis class and wrote the portion in the setup & draw sections for the Tardis.  For the Tardis portion of this assignment, it rotates along its X and Y-axes simultaneously, and then translates along an arc at a medium rate specified by the user. The class Tardis initializes the Tardis image and sets its motions. The main program then displays the animation.  I was originally going to do shooting stars, but ended up animating a Tardis object instead.

BDH worked on the Planet class and in implementing camera controls. The Planet class defines planets which rotate along an axis at a user-specified angular velocity, and which move along a user-specified direction in a linear path. The user can also specify where in the scene the planets are created, as well the size of the planets. The planets are drawn with rings (like Saturn) which are constantly changing size and colors randomly. The planets have a moon texture to make them look more realistic. As far as the camera controls, although they are not perfect, they allow a user to translate and rotate around in a scene. I decided to implement this functionality myself rather than using a camera library to learn more about 3D transformation matrices and how to define objects in 3D space. However, to gimbal-locking effects in the method I used, after a few rotations the camera starts to act not intuitively, and the scene has to be reset to manipulate it effectively. Perhaps with more time this issue could have been resolved.

The program also features a visual world coordinate axis which was useful for debugging purposes and for orienting the scene while you are moving around in it using the keyboard.
