For assignment 5, group 18 decided to do a particle simulation involving protons, neutrons, and electrons.  Each subatomic particle is acted upon by gravitational forces depending on neighboring particles, a drag force to dampen out energy in the system, and governed by different rules of interaction based upon electromagnetic charge.  The Particle() class first defines all fields and methods for a general subatomic particle, and the Electron(), Neutron(), and Proton() classes each extend the Particle() class to include specific behaviors for the particles.

The governing rules for our system were as follows:
Protons exerted a repelling force against other protons, an attractive force towards electrons, and no force towards neutrons. Electrons exerted a repelling force against other electrons, an attractive force towards protons, and no force towards neutrons. Neutrons exerted an attractive force towards both protons and neutrons, and exerted no force towards other neutrons. Each subatomic force was inversely proportional to the square of the distance between any two given particles, just like real physical gravitational force. To calculate the net force on each particle i, the contribution for each particle j in the system was added to a force vector to obtain a resultant force. The forces between two particles were also dependent on the mass of those two particles. For this system, we assumed a mass of 1.0 for protons and neutrons, and a mass of 0.545 for electrons.

Once a resultant force was calculated for each particle, the corresponding acceleration and velocity was computed, and used to calculate the next position of each particle at each cycle of the main loop.

This assignment also features user input by allowing the user to pan around the scene by clicking and dragging. There is also inspiring music being played in the background to make our particle simulation more appealing. At the beginning of our simulation, all particles are placed in a spherical envelope surrounding the world origin, which is enclosed by a bounding box that is used for visualization purposes only. In the visualization, Protons are drawn red, electrons are drawn blue, and neutrons are drawn as yellow. The simulation is a 3D based model.

For this project, the whole team worked on defining the main components of the particle class together. Once this was done, MK then coded the Proton class; the Electron class was completed by TG; and BDH completed the Neutron class along with a majority of the main code.  MK wrote the framework for instantiating specific particles in main and introduced the addition of the drag forces to the system.

BDH and TG both worked on the sound extra credit, and MK and TG collaborated on the movie extra credit.  BDH edited the code so each portion worked together.

One of the many issues we ran into was getting the forces between the subatomic particles right. The issue for this problem was that when two subatomic particles reached a distance close to zero, their force would become infinitely large (due to being inversely proportional to the square of their distance), and would cause both particles to suddenly shoot past each other when they overlapped in 3D space. This problem was later alleviated by defining a “buffer”  zone around each particle, where no force was generated if they became too close to one another. Essentially, this code acted like a contact force that prevented the particles from going directly inside one another.

We would like to mention that due to the large difficulty we had in implementing the physics behind the particles, as well as due to the nature of the simulation, we decided to not implement complex shapes for our three subatomic particles. At one point, we decided to change the basic spheres to custom loaded .obj files, but that slowed down our program dramatically to the point where our computers were unable to draw more than 3 custom-shaped particles on the screen without all elements disappearing from the screen; essentially, the computer was unable to keep up with the transformations for moving many loaded .obj files. Because we wanted to have a large number of particles being simulated in our visualization, and because we did not feel that other shapes would really capture the essence of subatomic models typically depicted in physics classes, we feel that the lack of complex shapes in our objects is justified for this project. Please feel free to reach out with any questions on this.

